---

- hosts: all
  remote_user: wal
  vars:
    app: "pixel"
    app_dir: "/home/wal/{{ node_name | mandatory }}"

  tasks:
    - name: stop application
      ignore_errors: yes
      shell: chdir={{ app_dir }} export PATH=$PATH:/usr/lib/erlang/bin && {{ app_dir }}/release/bin/{{ app }} stop

    - name: ensure log directory exists
      file: dest={{ app_dir }}/log state=directory

    - name: ensure log_archive directory exists
      file: dest={{ app_dir }}/log_archive state=directory

    - name: ensure bin directory exists
      file: dest={{ app_dir }}/bin state=directory

    - name: remove release directory and all its files
      file: dest={{ app_dir }}/release state=absent

    - name: create release directory
      file: dest={{ app_dir }}/release state=directory

    - name: copy and unpack the release
      unarchive: src=../../_rel/pixel-1.tar.gz dest={{ app_dir }}/release

    - name: copy tidyup script to destination server
      copy: src=../../bin/tidyup dest={{ app_dir }}/bin/tidyup mode=755

    - name: template monitor script out to destination server 
      template: src=../../j2/monitor.j2 dest={{ app_dir }}/bin/monitor mode=755

    - name: template vm.args.j2 out to destination server 
      template: src=../../j2/vm.args.j2 dest={{ app_dir }}/release/releases/1/vm.args

    - name: template sys.config.j2 out to destination server 
      template: src=../../j2/sys.config.j2 dest={{ app_dir }}/release/releases/1/sys.config

    - name: launch application
      shell: chdir={{ app_dir }} export export PATH=$PATH:/usr/lib/erlang/bin && {{ app_dir }}/release/bin/{{ app }} start
